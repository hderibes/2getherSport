{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ResearchScreen from \"./screens/ResearchScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ChatScreen from \"./screens/ChatScreen\";\nimport MeetingsScreen from \"./screens/MeetingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction SettingsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Settings!\"\n    })\n  });\n}\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (route.name == 'Research') {\n              iconName = focused ? 'search' : 'search-outline';\n            } else if (route.name == 'Meetings') {\n              iconName = focused ? 'calendar' : 'calendar-outline';\n            } else if (route.name == 'Profile') {\n              iconName = focused ? 'person' : 'person-outline';\n            } else if (route.name === 'Chat') {\n              iconName = focused ? 'chatbubbles' : 'chatbubbles-outline';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray'\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Research\",\n        component: ResearchScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Meetings\",\n        component: MeetingsScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Chat\",\n        component: ChatScreen\n      })]\n    })\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  }\n});","map":{"version":3,"names":["React","Text","View","NavigationContainer","createBottomTabNavigator","Ionicons","HomeScreen","ResearchScreen","ProfileScreen","ChatScreen","MeetingsScreen","jsx","_jsx","jsxs","_jsxs","SettingsScreen","style","flex","justifyContent","alignItems","children","Tab","App","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","_NativeWindStyleSheet","create","styles"],"sources":["/home/cailloux/2getherSport/App.js"],"sourcesContent":["import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\n\nimport HomeScreen from './screens/HomeScreen';\nimport ResearchScreen from './screens/ResearchScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ChatScreen from './screens/ChatScreen';\nimport MeetingsScreen from './screens/MeetingScreen';\n\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\n\n\n\n\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused\n                ? 'home'\n                : 'home-outline';\n            } \n            else if (route.name == 'Research'){\n              iconName = focused ? 'search' : 'search-outline';\n            }\n            else if (route.name == 'Meetings'){\n              iconName = focused ? 'calendar' : 'calendar-outline';\n            }\n            else if (route.name == 'Profile'){\n              iconName = focused ? 'person' : 'person-outline';\n            }\n            else if (route.name === 'Chat') {\n              iconName = focused ? 'chatbubbles' : 'chatbubbles-outline';\n            }\n\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray',\n        })}\n      >\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\n        <Tab.Screen name=\"Research\" component={ResearchScreen} />\n        <Tab.Screen name=\"Meetings\" component={MeetingsScreen} />\n        <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n        <Tab.Screen name=\"Chat\" component={ChatScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AAExE,OAAOC,QAAQ;AAGf,OAAOC,UAAU;AACjB,OAAOC,cAAc;AACrB,OAAOC,aAAa;AACpB,OAAOC,UAAU;AACjB,OAAOC,cAAc;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGrD,SAASC,cAAcA,CAAA,EAAG;EACxB,OACEH,IAAA,CAACV,IAAI;IAACc,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvER,IAAA,CAACX,IAAI;MAAAmB,QAAA,EAAC;IAAS,CAAM;EAAC,CAClB,CAAC;AAEX;AAOA,IAAMC,GAAG,GAAGjB,wBAAwB,CAAC,CAAC;AAEtC,eAAe,SAASkB,GAAGA,CAAA,EAAG;EAC5B,OACEV,IAAA,CAACT,mBAAmB;IAAAiB,QAAA,EAClBN,KAAA,CAACO,GAAG,CAACE,SAAS;MACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;YAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;cAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;YACjC,IAAIC,QAAQ;YAEZ,IAAIN,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;cACzBD,QAAQ,GAAGH,OAAO,GACd,MAAM,GACN,cAAc;YACpB,CAAC,MACI,IAAIH,KAAK,CAACO,IAAI,IAAI,UAAU,EAAC;cAChCD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;YAClD,CAAC,MACI,IAAIH,KAAK,CAACO,IAAI,IAAI,UAAU,EAAC;cAChCD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;YACtD,CAAC,MACI,IAAIH,KAAK,CAACO,IAAI,IAAI,SAAS,EAAC;cAC/BD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;YAClD,CAAC,MACI,IAAIH,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;cAC9BD,QAAQ,GAAGH,OAAO,GAAG,aAAa,GAAG,qBAAqB;YAC5D;YAIA,OAAOjB,IAAA,CAACP,QAAQ;cAAC4B,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC/D,CAAC;UACDI,qBAAqB,EAAE,QAAQ;UAC/BC,uBAAuB,EAAE;QAC3B,CAAC;MAAA,CAAE;MAAAf,QAAA,GAEHR,IAAA,CAACS,GAAG,CAACe,MAAM;QAACH,IAAI,EAAC,MAAM;QAACI,SAAS,EAAE/B;MAAW,CAAE,CAAC,EACjDM,IAAA,CAACS,GAAG,CAACe,MAAM;QAACH,IAAI,EAAC,UAAU;QAACI,SAAS,EAAE9B;MAAe,CAAE,CAAC,EACzDK,IAAA,CAACS,GAAG,CAACe,MAAM;QAACH,IAAI,EAAC,UAAU;QAACI,SAAS,EAAE3B;MAAe,CAAE,CAAC,EACzDE,IAAA,CAACS,GAAG,CAACe,MAAM;QAACH,IAAI,EAAC,SAAS;QAACI,SAAS,EAAE7B;MAAc,CAAE,CAAC,EACvDI,IAAA,CAACS,GAAG,CAACe,MAAM;QAACH,IAAI,EAAC,MAAM;QAACI,SAAS,EAAE5B;MAAW,CAAE,CAAC;IAAA,CACpC;EAAC,CACG,CAAC;AAE1B;AAAC6B,qBAAA,CAAAC,MAAA;EAAAC,MAAA;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}