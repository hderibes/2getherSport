{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar cities = ['New York', 'Los Angeles', 'Chicago', 'San Francisco', 'Miami', 'Seattle'];\nvar CitySelector = function CitySelector() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCity = _useState2[0],\n    setSelectedCity = _useState2[1];\n  var _useState3 = useState(cities),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredCities = _useState4[0],\n    setFilteredCities = _useState4[1];\n  var handleCityChange = function handleCityChange(city) {\n    setSelectedCity(city);\n  };\n  var handleFilterCities = function handleFilterCities(text) {\n    var filtered = cities.filter(function (city) {\n      return city.toLowerCase().includes(text.toLowerCase());\n    });\n    setFilteredCities(filtered);\n  };\n  return _jsxs(\"div\", {\n    children: [_jsx(\"label\", {\n      children: \"S\\xE9lectionnez une ville :\"\n    }), _jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"Recherchez une ville...\",\n      onChange: function onChange(e) {\n        return handleFilterCities(e.target.value);\n      }\n    }), _jsx(\"select\", {\n      value: selectedCity,\n      onChange: function onChange(e) {\n        return handleCityChange(e.target.value);\n      },\n      children: filteredCities.map(function (city) {\n        return _jsx(\"option\", {\n          value: city,\n          children: city\n        }, city);\n      })\n    }), _jsxs(\"p\", {\n      children: [\"Ville s\\xE9lectionn\\xE9e : \", selectedCity]\n    })]\n  });\n};\nexport default CitySelector;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","cities","CitySelector","_useState","_useState2","_slicedToArray","selectedCity","setSelectedCity","_useState3","_useState4","filteredCities","setFilteredCities","handleCityChange","city","handleFilterCities","text","filtered","filter","toLowerCase","includes","children","type","placeholder","onChange","e","target","value","map"],"sources":["/home/cailloux/2getherSport/components/Selecteur_ville.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport { View, Text, TextInput, Picker, FlatList } from 'react-native';\n\nconst cities = [\n  'New York',\n  'Los Angeles',\n  'Chicago',\n  'San Francisco',\n  'Miami',\n  'Seattle',\n  // Ajoutez d'autres villes au besoin\n];\n\nconst CitySelector = () => {\n  const [selectedCity, setSelectedCity] = useState('');\n  const [filteredCities, setFilteredCities] = useState(cities);\n\n  const handleCityChange = (city) => {\n    setSelectedCity(city);\n  };\n\n  const handleFilterCities = (text) => {\n    const filtered = cities.filter((city) =>\n      city.toLowerCase().includes(text.toLowerCase())\n    );\n    setFilteredCities(filtered);\n  };\n\n  return (\n    <View>\n      <Text>Sélectionnez une ville :</Text>\n      <TextInput\n        placeholder=\"Recherchez une ville...\"\n        onChangeText={handleFilterCities}\n      />\n      <Picker\n        selectedValue={selectedCity}\n        onValueChange={(itemValue, itemIndex) => handleCityChange(itemValue)}\n      >\n        {filteredCities.map((city) => (\n          <Picker.Item key={city} label={city} value={city} />\n        ))}\n      </Picker>\n      <Text>Ville sélectionnée : {selectedCity}</Text>\n    </View>\n  );\n};\n\nexport default CitySelector;\n*/\n\nimport React, { useState } from 'react';\n\nconst cities = [\n  'New York',\n  'Los Angeles',\n  'Chicago',\n  'San Francisco',\n  'Miami',\n  'Seattle',\n  // Ajoutez d'autres villes au besoin\n];\n\nconst CitySelector = () => {\n  const [selectedCity, setSelectedCity] = useState('');\n  const [filteredCities, setFilteredCities] = useState(cities);\n\n  const handleCityChange = (city) => {\n    setSelectedCity(city);\n  };\n\n  const handleFilterCities = (text) => {\n    const filtered = cities.filter((city) =>\n      city.toLowerCase().includes(text.toLowerCase())\n    );\n    setFilteredCities(filtered);\n  };\n\n  return (\n    <div>\n      <label>Sélectionnez une ville :</label>\n      <input\n        type=\"text\"\n        placeholder=\"Recherchez une ville...\"\n        onChange={(e) => handleFilterCities(e.target.value)}\n      />\n      <select value={selectedCity} onChange={(e) => handleCityChange(e.target.value)}>\n        {filteredCities.map((city) => (\n          <option key={city} value={city}>\n            {city}\n          </option>\n        ))}\n      </select>\n      <p>Ville sélectionnée : {selectedCity}</p>\n    </div>\n  );\n};\n\nexport default CitySelector;\n"],"mappings":";AAmDA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExC,IAAMC,MAAM,GAAG,CACb,UAAU,EACV,aAAa,EACb,SAAS,EACT,eAAe,EACf,OAAO,EACP,SAAS,CAEV;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAwCP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAA4CZ,QAAQ,CAACK,MAAM,CAAC;IAAAQ,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAExC,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAI,EAAK;IACjCN,eAAe,CAACM,IAAI,CAAC;EACvB,CAAC;EAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,IAAI,EAAK;IACnC,IAAMC,QAAQ,GAAGf,MAAM,CAACgB,MAAM,CAAC,UAACJ,IAAI;MAAA,OAClCA,IAAI,CAACK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACJ,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC;IAAA,CACjD,CAAC;IACDP,iBAAiB,CAACK,QAAQ,CAAC;EAC7B,CAAC;EAED,OACEhB,KAAA;IAAAoB,QAAA,GACEtB,IAAA;MAAAsB,QAAA,EAAO;IAAwB,CAAO,CAAC,EACvCtB,IAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,yBAAyB;MACrCC,QAAQ,EAAE,SAAAA,SAACC,CAAC;QAAA,OAAKV,kBAAkB,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA;IAAC,CACrD,CAAC,EACF5B,IAAA;MAAQ4B,KAAK,EAAEpB,YAAa;MAACiB,QAAQ,EAAE,SAAAA,SAACC,CAAC;QAAA,OAAKZ,gBAAgB,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MAAA,CAAC;MAAAN,QAAA,EAC5EV,cAAc,CAACiB,GAAG,CAAC,UAACd,IAAI;QAAA,OACvBf,IAAA;UAAmB4B,KAAK,EAAEb,IAAK;UAAAO,QAAA,EAC5BP;QAAI,GADMA,IAEL,CAAC;MAAA,CACV;IAAC,CACI,CAAC,EACTb,KAAA;MAAAoB,QAAA,GAAG,6BAAqB,EAACd,YAAY;IAAA,CAAI,CAAC;EAAA,CACvC,CAAC;AAEV,CAAC;AAED,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}