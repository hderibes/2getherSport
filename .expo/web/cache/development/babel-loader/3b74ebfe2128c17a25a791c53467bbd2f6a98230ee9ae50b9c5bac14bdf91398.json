{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nvar _templateObject, _templateObject2;\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styled } from 'nativewind';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar StyledView = styled(View)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  /* Add your Tailwind CSS class styles here */\\n  flex: 1;\\n  justify-content: center;\\n  background-color: #CBD5E0; /* Replace with your desired color */\\n  align-items: center;\\n\"])));\nvar StyledText = styled(Text)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  /* Add your Tailwind CSS class styles here */\\n  color: #1A202C; /* Replace with your desired color */\\n  font-size: 16px; /* Replace with your desired font size */\\n\"])));\nvar Top = function Top() {\n  return _jsx(StyledView, {\n    children: _jsx(StyledText, {\n      children: \"Try resizing me! \\uD83C\\uDF89\"\n    })\n  });\n};\nexport default withExpoSnack(Top);\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"mx-auto\": {\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\"\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"bg-black\": {\n      \"backgroundColor\": \"#000\"\n    },\n    \"bg-slate-500\": {\n      \"backgroundColor\": \"#64748b\"\n    },\n    \"pb-3\": {\n      \"paddingBottom\": 12\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","Text","View","styled","jsx","_jsx","StyledView","_templateObject","_taggedTemplateLiteralLoose","StyledText","_templateObject2","Top","children","withExpoSnack","_NativeWindStyleSheet","create","styles","atRules","topics"],"sources":["/home/cailloux/Documents/togetherSport/components/Top.js"],"sourcesContent":["import * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { styled } from 'nativewind';\n\n\nconst StyledView = styled(View)`\n  /* Add your Tailwind CSS class styles here */\n  flex: 1;\n  justify-content: center;\n  background-color: #CBD5E0; /* Replace with your desired color */\n  align-items: center;\n`;\n\nconst StyledText = styled(Text)`\n  /* Add your Tailwind CSS class styles here */\n  color: #1A202C; /* Replace with your desired color */\n  font-size: 16px; /* Replace with your desired font size */\n`;\n\nconst Top = () => {\n  return (\n    <StyledView>\n      <StyledText>Try resizing me! ðŸŽ‰</StyledText>\n    </StyledView>\n  );\n};\n\n// This demo is using an external compiler that will only work in Expo Snacks.\n// You may see flashes of unstyled content, this will not occur under normal use!\n// Please see the documentation to set up your application\nexport default withExpoSnack(Top);"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/B,SAASC,MAAM,QAAQ,YAAY;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAGpC,IAAMC,UAAU,GAAGH,MAAM,CAACD,IAAI,CAAC,CAAAK,eAAA,KAAAA,eAAA,GAAAC,2BAAA,+LAM9B;AAED,IAAMC,UAAU,GAAGN,MAAM,CAACF,IAAI,CAAC,CAAAS,gBAAA,KAAAA,gBAAA,GAAAF,2BAAA,kLAI9B;AAED,IAAMG,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,OACEN,IAAA,CAACC,UAAU;IAAAM,QAAA,EACTP,IAAA,CAACI,UAAU;MAAAG,QAAA,EAAC;IAAmB,CAAY;EAAC,CAClC,CAAC;AAEjB,CAAC;AAKD,eAAeC,aAAa,CAACF,GAAG,CAAC;AAACG,qBAAA,CAAAC,MAAA;EAAAC,MAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;EAAAC,OAAA;IAAA;EAAA;EAAAC,MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}